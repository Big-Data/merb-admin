<%
  params = request.params.except(:action, :controller, :model_name)
  filter = params[:filter]
  query = params[:query]
  sort = params[:sort]
  sort_reverse = params[:sort_reverse]
%>
        <div id="content-main">
          <ul class="object-tools">
            <li>
              <%= link_to("Add #{@abstract_model.pretty_name}", slice_url(:admin_new, :model_name => @abstract_model.singular_name), :class => "addlink") %>
            </li>
          </ul>
          <div class="module filtered" id="changelist">
            <div id="toolbar">
              <form id="changelist-search" action="" method="get">
              <div>
                <label for="searchbar"><img src="<%= image_path("icon_searchbox.png") %>" alt="Search" /></label>
                <input type="text" size="40" name="query" value="" id="searchbar" />
                <input type="submit" value="Search" />
                <% if filter || query %>
                <span class="small quiet"><%= @record_count %> <%= @record_count == 1 ? "result" : "results" %> (<a href="?"><%= @abstract_model.count %> total</a>)</span>
                <% end %>
                <% if filter %>
                <% filter.each do |name, value| %>
                <input type="hidden" name="filter[<%= name %>]" value="<%= value %>"/>
                <% end %>
                <% end %>
              </div>
              </form>
            </div>
            <script type="text/javascript">document.getElementById("searchbar").focus();</script>
            <div id="changelist-filter">
              <h2>Filter</h2>
              <% @properties.each do |property| %>
              <% type = property[:type] %>
              <% name = property[:name] %>
              <% pretty_name = property[:pretty_name] %>
              <% flag_map = property[:flag_map] %>
              <% if type == :boolean %>
              <h3>By <%= pretty_name %></h3>
              <ul>
                <li class="<%= filter.nil? || filter[name].blank? ? "selected" : nil %>">
                  <a href="?<%= Merb::Parse.params_to_query_string(params.merge(:filter => (filter || {}).reject{|key, value| key.to_sym == name})) %>">All</a>
                </li>
                <li class="<%= filter && filter[name] == "true" ? "selected" : nil %>">
                  <a href="?<%= Merb::Parse.params_to_query_string(params.merge(:filter => (filter || {}).merge({name => "true"}))) %>">Yes</a>
                </li>
                <li class="<%= filter && filter[name] == "false" ? "selected" : nil %>">
                  <a href="?<%= Merb::Parse.params_to_query_string(params.merge(:filter => (filter || {}).merge({name => "false"}))) %>">No</a>
                </li>
              </ul>
              <% elsif type == :integer && flag_map %>
              <h3>By <%= pretty_name %></h3>
              <ul>
                <li class="<%= filter.nil? || filter[name].blank? ? "selected" : nil %>">
                  <a href="?<%= Merb::Parse.params_to_query_string(params.merge(:filter => (filter || {}).reject{|key, value| key.to_sym == name})) %>">All</a>
                </li>
                <% flag_map.values.map{|v| v.to_s}.sort.each do |value| %>
                <li class="<%= filter && filter[name] == value ? "selected" : nil %>">
                  <a href="?<%= Merb::Parse.params_to_query_string(params.merge(:filter => (filter || {}).merge({name => value}))) %>"><%= value.capitalize.gsub('_', ' ')%></a>
                </li>
                <% end %>
              </ul>
              <% end %>
              <% end %>
            </div>
            <table cellspacing="0">
              <thead>
                <tr>
                  <% @properties.each do |property| %>
                  <% name = property[:name] %>
                  <% pretty_name = property[:pretty_name] %>
                  <th class="<%= sort == name.to_s ? sort_reverse ? 'sorted descending' : 'sorted ascending' : nil %>">
                    <a href="?<%= Merb::Parse.params_to_query_string(params.merge(:sort => name).reject{|key, value| key.to_sym == :sort_reverse}.merge(sort == name.to_s && sort_reverse != "true" ? {:sort_reverse => "true"} : {})) %>"><%= pretty_name.capitalize %></a>
                  </th>
                  <% end %>
                </tr>
              </thead>
              <tbody>
                <% @objects.each_with_index do |object, index| %>
                <tr class="row<%= index % 2 == 0 ? '1' : '2' %>">
                  <% @properties.each do |property| %>
                  <% type = property[:type] %>
                  <% name = property[:name] %>
                  <td>
                    <a href="<%= slice_url(:admin_edit, :model_name => @abstract_model.singular_name, :id => object.id) %>">
                      <% case type %>
                      <% when :boolean %>
                      <% if object.send(name) == true %>
                      <img alt="True" src="<%= image_path("icon-yes.gif") %>"/>
                      <% else %>
                      <img alt="False" src="<%= image_path("icon-no.gif") %>"/>
                      <% end %>
                      <% when :date_time %>
                      <% value = object.send(name) %>
                      <%= value.respond_to?(:strftime) ? value.strftime("%b. %d, %Y, %I:%M%p") : nil %>
                      <% when :date %>
                      <% value = object.send(name) %>
                      <%= value.respond_to?(:strftime) ? value.strftime("%b. %d, %Y") : nil %>
                      <% when :time %>
                      <% value = object.send(name) %>
                      <%= value.respond_to?(:strftime) ? value.strftime("%I:%M%p") : nil %>
                      <% when :string %>
                      <%= object.send(name).to_s.truncate(50) %>
                      <% when :text %>
                      <%= object.send(name).to_s.truncate(50) %>
                      <% else %>
                      <%= object.send(name) %>
                      <% end %>
                    </a>
                  </td>
                  <% end %>
                </tr>
                <% end %>
              </tbody>
            </table>
            <p class="paginator">
              <% if @page_count.to_i > 1 %>
              <%= paginate(@current_page, @page_count, :url => '?' + Merb::Parse.params_to_query_string(params)) %>
              <% end %>
              <%= @record_count %> <%= @record_count == 1 ? @abstract_model.pretty_name : @abstract_model.pretty_name.pluralize %>
              <% if @page_count.to_i == 2 %>
              <%= link_to("Show all", '?' + Merb::Parse.params_to_query_string(params.merge(:all => true)), :class => "showall") %>
              <% end %>
            </p>
          </div>
        </div>
        <br class="clear" />
